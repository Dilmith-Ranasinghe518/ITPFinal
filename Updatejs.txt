import React, { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import Nav from "../Nav/Nav";

function UpdateInventory() {
  const [inputs, setInputs] = useState({
    name: "",
    category: "",
    unit: "",
    quantity: "",
    description: "",
  });

  const { id } = useParams(); // Get the dynamic `id` from the URL
  const navigate = useNavigate();

  // Fetch Inventory Data on Component Mount
  useEffect(() => {
    const fetchInventoryData = async () => {
      try {
        const response = await fetch(`http://localhost:5000/inventory/${id}`);
        const data = await response.json();

        if (response.ok) {
          // Log the fetched data for debugging
          console.log("Fetched data:", data);

          // Ensure that the fields are correctly populated with fetched data
          setInputs({
            name: data.name || "",
            category: data.category || "",
            unit: data.unit || "",
            quantity: data.quantity || "",
            description: data.description || "",
          });
        } else {
          console.error("Error fetching inventory:", data);
        }
      } catch (error) {
        console.error("Error fetching inventory data:", error);
      }
    };

    fetchInventoryData();
  }, [id]); // Only run this effect when `id` changes

  // Handle change in input fields
  const handleChange = (e) => {
    setInputs((prevState) => ({
      ...prevState,
      [e.target.name]: e.target.value,
    }));
  };

  // Handle form submission to update the inventory
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch(`http://localhost:5000/inventory/${id}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          name: inputs.name,
          category: inputs.category,
          unit: inputs.unit,
          quantity: inputs.quantity,
          description: inputs.description,
        }),
      });

      if (!response.ok) {
        throw new Error("Failed to update inventory");
      }

      navigate("/inventory"); // Redirect after successful update
    } catch (error) {
      console.error("Update failed:", error);
    }
  };

  return (
    <div>
      <Nav />
      <h1>Update Inventory</h1>

      <form onSubmit={handleSubmit}>
        <label>Name</label>
        <br />
        <input
          type="text"
          name="name"
          value={inputs.name}
          onChange={handleChange}
          required
        />
        <br />
        <br />

        <label>Category</label>
        <br />
        <select
          name="category"
          onChange={handleChange}
          value={inputs.category}
          required
        >
          <option value="">Select Category</option>
          <option value="Organic">Organic</option>
          <option value="Plastic">Plastic</option>
          <option value="Polythene">Polythene</option>
          <option value="Metal">Metal</option>
        </select>
        <br />
        <br />

        <label>Unit</label>
        <br />
        <input
          type="text"
          name="unit"
          value={inputs.unit}
          onChange={handleChange}
          required
        />
        <br />
        <br />

        <label>Quantity</label>
        <br />
        <input
          type="number"
          name="quantity"
          value={inputs.quantity}
          onChange={handleChange}
          required
        />
        <br />
        <br />

        <label>Description</label>
        <br />
        <input
          type="text"
          name="description"
          value={inputs.description}
          onChange={handleChange}
          required
        />
        <br />
        <br />

        <button type="submit">Update</button>
      </form>
    </div>
  );
}

export default UpdateInventory;
